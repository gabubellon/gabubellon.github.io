<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Gabu Bellon Personal Page</title><link href="https://gabubellon.me/" rel="alternate"></link><link href="https://gabubellon.me/feeds/all.atom.xml" rel="self"></link><id>https://gabubellon.me/</id><updated>2020-03-09T00:00:00-03:00</updated><subtitle>Gabu Bellon Personal Page</subtitle><entry><title>Instalando e utilizando o pyenv</title><link href="https://gabubellon.me/pyenv-python.html" rel="alternate"></link><published>2020-03-09T00:00:00-03:00</published><updated>2020-03-09T00:00:00-03:00</updated><author><name>Gabriel (Gabu) Bellon</name></author><id>tag:gabubellon.me,2020-03-09:/pyenv-python.html</id><summary type="html">&lt;p&gt;Como configurar e utilizar o pyenv para gerenciar múltiplas instalações de python&lt;/p&gt;</summary><content type="html">&lt;h1&gt;pyenv&lt;/h1&gt;
&lt;p&gt;Pyenv é um gerenciador criado para controlar múltiplas versões de python em um mesmo ambiente.
O mesmo permite ter versões distintas sendo executadas, além de se combinar com a criação de ambientes virtuais.&lt;/p&gt;
&lt;h2&gt;Instalando o pyenv&lt;/h2&gt;
&lt;p&gt;Basta seguir as recomendações do repositório oficial:
&lt;a href="https://github.com/pyenv/pyenv#basic-github-checkout"&gt;https://github.com/pyenv/pyenv#basic-github-checkout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ou utilizar um script de instalação que auxila em algumas configurações:
&lt;a href="https://github.com/pyenv/pyenv-installer"&gt;https://github.com/pyenv/pyenv-installer&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#Executando pela instalação purta &lt;/span&gt;
$ curl https://pyenv.run &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ou&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#Utilizando o script de instalação&lt;/span&gt;
$ curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É necessário modificar o arquivo de configuração de seu interpretador de comandas (.bashrc para o bash ou .zshrc para zsh/ohmyzsh) e adicionar os caminhos de path para o pyenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pyenv/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#Aqui já ativando o virtualenv para funcionar nativamente&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Abra um novo terminal (ou execute um &lt;code&gt;source .bashrc&lt;/code&gt; por exemplo) e execute o comando para verificar a instalação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Deve retornar algo parecido dependendo da versão atual:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pyenvcmd" src="https://gabubellon.me/images/pyenv01.png"&gt;&lt;/p&gt;
&lt;h2&gt;Utilizando o pyenv&lt;/h2&gt;
&lt;p&gt;Seguem alguns comandos e exemplos utéis para utilizar o pyenv.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pyenv version&lt;/code&gt;: exibe a versão\versões corrente do python sendo utilizadas;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyenv versions&lt;/code&gt;: lista todas versões de python instaladas;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyenv global&lt;/code&gt;: lista a versão\versões globais de python;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyenv global version1 &amp;lt;version2...versionN&amp;gt;&lt;/code&gt;: define quais as versões e ordem a serem definida como global;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyenv install &amp;lt;version&amp;gt;&lt;/code&gt;: instala uma versão de python&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Exemplos&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Listar a versão corrente (&lt;code&gt;system&lt;/code&gt;):&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv versions
&amp;gt; system &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; by /home/gabriel/.pyenv/version&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Instalar a versão &lt;code&gt;python 3.5.7&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.5.7 
&amp;gt; Downloading Python-3.5.7.tar.xz...
&amp;gt; -&amp;gt; https://www.python.org/ftp/python/3.5.7/Python-3.5.7.tar.xz
&amp;gt; Installing Python-3.5.7...
&amp;gt; Installed Python-3.5.7 to /home/gabriel/.pyenv/versions/3.5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Listar as versões instaladas (&lt;code&gt;system&lt;/code&gt; e &lt;code&gt;3.5.7&lt;/code&gt;):&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv versions
&amp;gt; * system &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; by /home/gabriel/.pyenv/version&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; by /home/gabriel/.pyenv/version&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;O símbolo &lt;code&gt;*&lt;/code&gt; indica a versão definida como global, que pode também pode ser verificada com o comando: &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv global
&amp;gt; system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Isso indica que todos os comandos pythons (&lt;em&gt;pip, pip3 python, python3, etc.&lt;/em&gt;) serão executados pela versão &lt;code&gt;system&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Modificando a versão global para a versão &lt;code&gt;3.5.7&lt;/code&gt; e verificando a mesma:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv global &lt;span class="m"&gt;3&lt;/span&gt;.5.7&lt;span class="p"&gt;;&lt;/span&gt; pyenv versions
&amp;gt;   system
&amp;gt; * &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; by /home/gabriel/.pyenv/version&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Executando os comandos &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; e &lt;code&gt;python3.5&lt;/code&gt; (irá executar a versão &lt;code&gt;3.5.7&lt;/code&gt;):&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;default, Jun &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:36:06&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.4.0&lt;span class="o"&gt;]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;
&amp;gt; ...
$ python3
Python &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;default, Jun &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:36:06&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.4.0&lt;span class="o"&gt;]&lt;/span&gt; on linux
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;  
&amp;gt; ...
$ python3.5
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;default, Jun &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:36:06&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.4.0&lt;span class="o"&gt;]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Modificando a versão global para as duas (&lt;code&gt;3.57&lt;/code&gt; e &lt;code&gt;system&lt;/code&gt;) e resolvendo nessa ordem:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv global &lt;span class="m"&gt;3&lt;/span&gt;.5.7 system&lt;span class="p"&gt;;&lt;/span&gt; pyenv global
&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.7
&amp;gt; system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Executando o comando &lt;code&gt;python&lt;/code&gt; e &lt;code&gt;python3.6&lt;/code&gt; e &lt;code&gt;python2.7&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;default, Jun &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:36:06&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.4.0&lt;span class="o"&gt;]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;
&amp;gt; ...
$ python3.6
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.6.8 &lt;span class="o"&gt;(&lt;/span&gt;default, Jan &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;11&lt;/span&gt;:02:34&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;8&lt;/span&gt;.0.1 &lt;span class="m"&gt;20180414&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;experimental&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;trunk revision &lt;span class="m"&gt;259383&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt;
&amp;gt; ...
$ python2.7
&amp;gt;  Python &lt;span class="m"&gt;2&lt;/span&gt;.7.15+ &lt;span class="o"&gt;(&lt;/span&gt;default, Nov &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;2018&lt;/span&gt;, &lt;span class="m"&gt;23&lt;/span&gt;:36:35&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.3.0&lt;span class="o"&gt;]&lt;/span&gt; on linux2
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;A versão &lt;code&gt;3.5.7&lt;/code&gt; é reconhecida como inicial, resolvendo o comando&lt;code&gt;python&lt;/code&gt;,
sendo o comandos &lt;code&gt;python3.6&lt;/code&gt; e &lt;code&gt;python2.7&lt;/code&gt; resolvidos pela versão &lt;code&gt;system&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Invertendo as ordens das versões (&lt;code&gt;system&lt;/code&gt; e depois &lt;code&gt;3.5.7&lt;/code&gt;):&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv global system &lt;span class="m"&gt;3&lt;/span&gt;.5.7&lt;span class="p"&gt;;&lt;/span&gt; pyenv global
&amp;gt; system
&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;.5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Executando o comandos novamente &lt;code&gt;python&lt;/code&gt; e &lt;code&gt;python3&lt;/code&gt; e &lt;code&gt;python3.5&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python
&amp;gt; Python &lt;span class="m"&gt;2&lt;/span&gt;.7.15+ &lt;span class="o"&gt;(&lt;/span&gt;default, Nov &lt;span class="m"&gt;27&lt;/span&gt; &lt;span class="m"&gt;2018&lt;/span&gt;, &lt;span class="m"&gt;23&lt;/span&gt;:36:35&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.3.0&lt;span class="o"&gt;]&lt;/span&gt; on linux2
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt;
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;...&lt;span class="o"&gt;)&lt;/span&gt;
$ python3
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.6.8 &lt;span class="o"&gt;(&lt;/span&gt;default, Jan &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;11&lt;/span&gt;:02:34&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;8&lt;/span&gt;.0.1 &lt;span class="m"&gt;20180414&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;experimental&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;trunk revision &lt;span class="m"&gt;259383&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt;
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;...&lt;span class="o"&gt;)&lt;/span&gt;
$ python3.5
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.5.7 &lt;span class="o"&gt;(&lt;/span&gt;default, Jun &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:36:06&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;7&lt;/span&gt;.4.0&lt;span class="o"&gt;]&lt;/span&gt; on linux
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.&amp;gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;A versão inicial (&lt;code&gt;system&lt;/code&gt;) resolve os comandos &lt;code&gt;python&lt;/code&gt;e &lt;code&gt;python3&lt;/code&gt;, sendo que o comando &lt;code&gt;python3.5&lt;/code&gt; é resolvido pela versão também definida como global (&lt;code&gt;3.5.7&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Portanto a ordem de versões para `pyenv global v1 &lt;v2..vn&gt; será a ordem que os comandas serão interpretados, fazendo com que possamos ter várias versões de python simultâneas e sem gerar concorrência.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para mais detalhes, documentações e exemplos consulte o repositório oficial da ferramenta: &lt;a href="https://github.com/pyenv/pyenv"&gt;https://github.com/pyenv/pyenv&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Para Ler na sequência:&lt;/strong&gt; &lt;a href="https://gabubellon.me/virtualenvwarpper-pyenv-python.html"&gt;Combinando o virtualenvwarpper com o pyenv &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="blog"></category><category term="pyenv"></category><category term="python"></category><category term="virtualenv"></category><category term="code"></category></entry><entry><title>Combinando o virtualenvwarpper com o pyenv</title><link href="https://gabubellon.me/virtualenvwarpper-pyenv-python.html" rel="alternate"></link><published>2020-03-09T00:00:00-03:00</published><updated>2020-03-09T00:00:00-03:00</updated><author><name>Gabriel (Gabu) Bellon</name></author><id>tag:gabubellon.me,2020-03-09:/virtualenvwarpper-pyenv-python.html</id><summary type="html">&lt;p&gt;Como configurar e utilizar o virtualenvwarpper junto com pyenv para ambientes virtuais.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;virtualenvwarpper e pyenv&lt;/h1&gt;
&lt;p&gt;O virtualenvwarpper é um plugin que que cria alguns a facilitadores e atalhos para utilizar ambientes virtuais com o python. Mais detalhes na documentação oficial: &lt;a href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html"&gt;https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Combinando o mesmo com o pyenv temos o &lt;em&gt;pyenv-virtualenvwrapper&lt;/em&gt;, um plugin do pyenv que permite criar ambientes virtuais de forma rápida e prática utilizando todas as versões de python gerenciadas pelo pyenv.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Para Ler na antes:&lt;/strong&gt; &lt;a href="https://gabubellon.me/pyenv-python.html"&gt;Instalando e utilizando o pyenv&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Instalando pyenv-virtualenvwrapper&lt;/h2&gt;
&lt;p&gt;A instalação é realizada seguindo as recomendações do repositório oficial &lt;a href="https://github.com/pyenv/pyenv-virtualenvwrapper"&gt;https://github.com/pyenv/pyenv-virtualenvwrapper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As versões de python &lt;code&gt;global&lt;/code&gt; do pyenv precisam ter o &lt;code&gt;virtualenvwrapper&lt;/code&gt; instalados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#pip e pip3 caso tenha python2.7 e python3 simultaneamente.&lt;/span&gt;
pip install setuptools
pip install virtualenvwrapper
pip3 install setuptools
pip3 install virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalando o &lt;em&gt;pyenv-virtualenvwrapper&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#$(pyenv root) é o a variável do pyenv que indica onde o mesmo está instalado. &lt;/span&gt;
git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git &lt;span class="k"&gt;$(&lt;/span&gt;pyenv root&lt;span class="k"&gt;)&lt;/span&gt;/plugins/pyenv-virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pyenv/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É necessário modifcar o arquivo de configuração de seu interpretador de comandas (.bashrc para o bash ou .zshrc para zsh/ohmyzsh) e adicionar algumas linhas antes e depois as configurações do pyenv&lt;/p&gt;
&lt;p&gt;Adicionar antes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#Configurações do virtualenvwrapper&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.virtualenvs &lt;span class="c1"&gt;#virtualenvs folder&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin/virtualenvwrapper.sh &lt;span class="c1"&gt;#virtualenvwrapper script location&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicionar depois:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#deixar explicito para o pyenv o uso do virtualenvwrapper&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No final terá algo similar a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#Configurações do virtualenvwrapper&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.virtualenvs &lt;span class="c1"&gt;#virtualenvs folder&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin/virtualenvwrapper.sh &lt;span class="c1"&gt;#virtualenvwrapper script location&lt;/span&gt;

&lt;span class="c1"&gt;#Bloco do pyenv já existente no arquivo&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.pyenv/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#deixar explicito para o pyenv o uso do virtualenvwrapper&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Exemplo de uso pyenv-virtualenvwrapper&lt;/h3&gt;
&lt;p&gt;No exemplo a seguir estamos configurando a versão global do python para a &lt;code&gt;miniconda3-latest&lt;/code&gt;, após isso é criado um virutalenv com o virtualenvwrapper (&lt;code&gt;test_conda&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Voltamos a versão global do python para a &lt;code&gt;system e 3.7.4&lt;/code&gt;, acessamos o virtualenv criado (&lt;code&gt;test_conda&lt;/code&gt;) e verificamos que o mesmo foi criado utilizando o python da instalação do &lt;code&gt;miniconda3-latest&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Um novo virtualenv é criado (&lt;code&gt;test_2.7&lt;/code&gt;) e ativado, validando que o mesmo utilizou a versão de python configurada como padrão (&lt;code&gt;system&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pyenv global
&amp;gt; system
&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;.7.4
&amp;gt;
$ pyenv global miniconda3-latest
$ &lt;span class="o"&gt;(&lt;/span&gt;miniconda3-latest&lt;span class="o"&gt;)&lt;/span&gt; 
$ python
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.7.4 &lt;span class="o"&gt;(&lt;/span&gt;default, Aug &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;15&lt;/span&gt;:17:50&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;Clang &lt;span class="m"&gt;4&lt;/span&gt;.0.1 &lt;span class="o"&gt;(&lt;/span&gt;tags/RELEASE_401/final&lt;span class="o"&gt;)]&lt;/span&gt; :: Anaconda, Inc. on darwin
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt; exit&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt;
$ &lt;span class="o"&gt;(&lt;/span&gt;miniconda3-latest&lt;span class="o"&gt;)&lt;/span&gt;
$ mkvirtualenv test_conda
&amp;gt; WARNING: the pyenv script is deprecated in favour of &lt;span class="sb"&gt;`&lt;/span&gt;python3.7 -m venv&lt;span class="sb"&gt;`&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;miniconda3-latest&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; $ pyenv global system &lt;span class="m"&gt;3&lt;/span&gt;.7.4
&amp;gt;
$ workon test_conda
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;test_conda&lt;span class="o"&gt;)&lt;/span&gt;
$ python
&amp;gt; Python &lt;span class="m"&gt;3&lt;/span&gt;.7.4 &lt;span class="o"&gt;(&lt;/span&gt;default, Aug &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;15&lt;/span&gt;:17:50&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;Clang &lt;span class="m"&gt;4&lt;/span&gt;.0.1 &lt;span class="o"&gt;(&lt;/span&gt;tags/RELEASE_401/final&lt;span class="o"&gt;)]&lt;/span&gt; :: Anaconda, Inc. on darwin
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt; exit&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;test_conda&lt;span class="o"&gt;)&lt;/span&gt; 
$ deactivate
&amp;gt;
$ python
&amp;gt; WARNING: Python &lt;span class="m"&gt;2&lt;/span&gt;.7 is not recommended.
&amp;gt; This version is included in macOS &lt;span class="k"&gt;for&lt;/span&gt; compatibility with legacy software.
&amp;gt; Future versions of macOS will not include Python &lt;span class="m"&gt;2&lt;/span&gt;.7.
&amp;gt; Instead, it is recommended that you transition to using &lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt; from within Terminal.
&amp;gt; 
&amp;gt; Python &lt;span class="m"&gt;2&lt;/span&gt;.7.16 &lt;span class="o"&gt;(&lt;/span&gt;default, Dec &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;18&lt;/span&gt;:00:32&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;4&lt;/span&gt;.2.1 Compatible Apple LLVM &lt;span class="m"&gt;11&lt;/span&gt;.0.0 &lt;span class="o"&gt;(&lt;/span&gt;clang-1100.0.32.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;-macos10.15-objc-s on darwin
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt; exit&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt;
$ mkvirtualenv test_2.7
&amp;gt; New python executable in /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/python
&amp;gt; Installing setuptools, pip, wheel...
&amp;gt; &lt;span class="k"&gt;done&lt;/span&gt;.
&amp;gt; virtualenvwrapper.user_scripts creating /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/predeactivate
&amp;gt; virtualenvwrapper.user_scripts creating /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/postdeactivate
&amp;gt; virtualenvwrapper.user_scripts creating /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/preactivate
&amp;gt; virtualenvwrapper.user_scripts creating /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/postactivate
&amp;gt; virtualenvwrapper.user_scripts creating /Users/gabriel.bellon/.virtualenvs/test_2.7/bin/get_env_details
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;test_2.7&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; $ python
&amp;gt; WARNING: Python &lt;span class="m"&gt;2&lt;/span&gt;.7 is not recommended.
&amp;gt; This version is included in macOS &lt;span class="k"&gt;for&lt;/span&gt; compatibility with legacy software.
&amp;gt; Future versions of macOS will not include Python &lt;span class="m"&gt;2&lt;/span&gt;.7.
&amp;gt; Instead, it is recommended that you transition to using &lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt; from within Terminal.
&amp;gt; 
&amp;gt; Python &lt;span class="m"&gt;2&lt;/span&gt;.7.16 &lt;span class="o"&gt;(&lt;/span&gt;default, Dec &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;2019&lt;/span&gt;, &lt;span class="m"&gt;18&lt;/span&gt;:00:32&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;GCC &lt;span class="m"&gt;4&lt;/span&gt;.2.1 Compatible Apple LLVM &lt;span class="m"&gt;11&lt;/span&gt;.0.0 &lt;span class="o"&gt;(&lt;/span&gt;clang-1100.0.32.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;-macos10.15-objc-s on darwin
&amp;gt; Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt; &amp;gt;&amp;gt;&amp;gt; exit&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;test_2.7&lt;span class="o"&gt;)&lt;/span&gt; 
$ deactivate
&amp;gt; 
$ pyenv global
&amp;gt; system
&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;.7.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma vez com a configurações criadas é testada, agora fica prático realizar o gerenciamento de múltiplos projetos python com diferentes versões.
Com o uso do &lt;em&gt;pyenv&lt;/em&gt; e do &lt;em&gt;pyenv-virtualenvwrapper&lt;/em&gt; criar combinações de instalações e ambientes virtuais padrões para qualquer situação de projeto.&lt;/p&gt;</content><category term="blog"></category><category term="pyenv"></category><category term="python"></category><category term="virtualenv"></category><category term="code"></category><category term="virtualenvwarpper"></category></entry><entry><title>Testing a post !</title><link href="https://gabubellon.me/post-test-en.html" rel="alternate"></link><published>2020-03-02T00:00:00-03:00</published><updated>2020-03-02T00:00:00-03:00</updated><author><name>Gabriel (Gabu) Bellon</name></author><id>tag:gabubellon.me,2020-03-02:/post-test-en.html</id><summary type="html">&lt;p&gt;My first post !&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Testing a post&lt;/h2&gt;
&lt;p&gt;Putting a code here:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hey a i`m a code line&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And put a puppy hear:&lt;/p&gt;
&lt;p&gt;&lt;img src='https://gabubellon.me/images/winking-black-and-brown-puppy-2023384.jpg' alt="drawing" width="200"/&gt;&lt;/p&gt;
&lt;p&gt;This is a just fun test, if read that , the test works!&lt;/p&gt;</content><category term="blog"></category><category term="pelican"></category><category term="python"></category><category term="site"></category><category term="static"></category></entry></feed>